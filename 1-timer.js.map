{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datePicker = document.querySelector(\"#datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nconst daysElement = document.querySelector(\"[data-days]\");\nconst hoursElement = document.querySelector(\"[data-hours]\");\nconst minutesElement = document.querySelector(\"[data-minutes]\");\nconst secondsElement = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nstartButton.disabled = true;\n\nconst options = {\nenableTime: true,\ntime_24hr: true,\ndefaultDate: new Date(),\nminuteIncrement: 1,\nonClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n    iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n    });\n    startButton.disabled = true;\n    } else {\n    userSelectedDate = selectedDates[0];\n    startButton.disabled = false;\n    }\n},\n};\n\nflatpickr(datePicker, options);\n\nstartButton.addEventListener(\"click\", () => {\nif (!userSelectedDate) return;\n\nstartButton.disabled = true;\ndatePicker.disabled = true;\n\ncountdownInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n    clearInterval(countdownInterval);\n    updateTimerUI(0, 0, 0, 0);\n    datePicker.disabled = false;\n    return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n    updateTimerUI(days, hours, minutes, seconds);\n}, 1000);\n});\n\nfunction convertMs(ms) {\nconst second = 1000;\nconst minute = second * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\n\nconst days = Math.floor(ms / day);\nconst hours = Math.floor((ms % day) / hour);\nconst minutes = Math.floor(((ms % day) % hour) / minute);\nconst seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\nreturn { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\nreturn String(value).padStart(2, \"0\");\n}\n\nfunction updateTimerUI(days, hours, minutes, seconds) {\ndaysElement.textContent = addLeadingZero(days);\nhoursElement.textContent = addLeadingZero(hours);\nminutesElement.textContent = addLeadingZero(minutes);\nsecondsElement.textContent = addLeadingZero(seconds);\n}\n\n"],"names":["datePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","timeDifference","updateTimerUI","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAmB,KACnBC,EAAoB,KAExBN,EAAY,SAAW,GAEvB,MAAMO,EAAU,CAChB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,CAAC,EAAI,IAAI,MAC3BC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACjB,CAAK,EACDT,EAAY,SAAW,KAEvBK,EAAmBG,EAAc,CAAC,EAClCR,EAAY,SAAW,GAE3B,CACA,EAEAU,EAAUX,EAAYQ,CAAO,EAE7BP,EAAY,iBAAiB,QAAS,IAAM,CACvCK,IAELL,EAAY,SAAW,GACvBD,EAAW,SAAW,GAEtBO,EAAoB,YAAY,IAAM,CAElC,MAAMK,EAAiBN,EADH,IAAI,KAGxB,GAAIM,GAAkB,EAAG,CACzB,cAAcL,CAAiB,EAC/BM,EAAc,EAAG,EAAG,EAAG,CAAC,EACxBb,EAAW,SAAW,GACtB,MACC,CAED,KAAM,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAc,EAClEC,EAAcC,EAAMC,EAAOC,EAASC,CAAO,CAC/C,EAAG,GAAI,EACP,CAAC,EAED,SAASC,EAAUC,EAAI,CAMvB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACtC,CAEA,SAASG,EAAeC,EAAO,CAC/B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACpC,CAEA,SAASR,EAAcC,EAAMC,EAAOC,EAASC,EAAS,CACtDf,EAAY,YAAckB,EAAeN,CAAI,EAC7CX,EAAa,YAAciB,EAAeL,CAAK,EAC/CX,EAAe,YAAcgB,EAAeJ,CAAO,EACnDX,EAAe,YAAce,EAAeH,CAAO,CACnD"}